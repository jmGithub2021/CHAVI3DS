/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserHome;

import java.io.Reader;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import login.LoginController;
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import root.ManageUser;
import root.MySqlConnect;
import root.SystemLog;

/**
 *
 * @author SURAJIT
 */
public class GlioblastomaClinilcalDataParse {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    SystemLog sysLog;
    ManageUser mu;
    public GlioblastomaClinilcalDataParse(){
        sysLog = new SystemLog();        
        String userid = LoginController.u_id;
        String utype = LoginController.utype;
        String username = LoginController.uname;
        mu = new ManageUser(userid,utype);
        
        try{
                Reader reader = Files.newBufferedReader(Paths.get("C:/Users/SURAJIT/Downloads/RadGlioHighA_DATA_2019-12-10_0653.csv"),StandardCharsets.UTF_8);
                CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withFirstRecordAsHeader().withIgnoreHeaderCase().withTrim());
                List<String> headerName = csvParser.getHeaderNames();
                List<Map<String,List<String>>> attributeMap = mu.getChaviAttribute("TMC20190001");
                //System.out.println(attributeMap.get(0).get("mr_number"));
                System.out.println(mu.getMoleculeList().contains("MGMT"));
                List<String> moleculeList = mu.getMoleculeList();                
                int n = headerName.size();
                int k = 0;    
                try{
                    for(CSVRecord csvRecords : csvParser){
                        System.out.println("-------------------------------Start---------------------------------");
                        while(k<n){
                            if(!csvRecords.get(headerName.get(k)).isEmpty()){
                                String csvAttributeGeneric = headerName.get(k).split("__")[0];
                                List<String> mappedAttribute = attributeMap.get(0).get(csvAttributeGeneric);
                                String validData = "";
                                validData = (mappedAttribute==null)? moleculeList.contains(csvAttributeGeneric.toUpperCase())?csvAttributeGeneric.toUpperCase()+" : "+csvRecords.get(headerName.get(k)):null:mappedAttribute+" : "+csvRecords.get(headerName.get(k));
                                
                                //System.out.println(attributeMap.get(0).get(headerName.get(k).split("__")[0])+" : "+headerName.get(k)+" : "+csvRecords.get(headerName.get(k))+" : "+csvRecords.get(headerName.get(k)).length());
                                System.out.println(validData);
                            }
                            k++;
                        }
                        k=0;
                        System.out.println("----------------------------------End------------------------------------");
                    }
                }catch(Exception ex){System.out.println("Err2340: "+ex.toString());}
        }catch(Exception ex){System.out.println("Err5425: "+ex.toString());}
        System.out.println(mu.getChaviAttribute("TMC20190001"));
    }
    
    public void setUniformCSVValue(String String){
        
    }
 
}
